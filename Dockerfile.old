# Use Python Alpine as base image
FROM python:3.11-alpine

# Create and set working directory
WORKDIR /app

# Copy project files
COPY . .

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PROJECT_NAME=html2pdf \
    DJANGO_SUPERUSER_USERNAME=admin \
    DJANGO_SUPERUSER_EMAIL=admin@example.com \
    DJANGO_SUPERUSER_PASSWORD=changeme

# Install system dependencies required for WeasyPrint
RUN apk add --no-cache \
    # WeasyPrint dependencies
    pango \
    fontconfig \
    harfbuzz \
    msttcorefonts-installer \
    # Build dependencies
    gcc \
    musl-dev \
    python3-dev \
    pango-dev \
    jpeg-dev \
    zlib-dev \
    freetype-dev \
    lcms2-dev \
    openjpeg-dev \
    tiff-dev \
    tk-dev \
    tcl-dev \
    cairo-dev \
    # Install Microsoft TrueType fonts
    && update-ms-fonts \
    && fc-cache -f

# Install Chrome and its dependencies using apk
RUN apk update && apk add --no-cache \
    chromium \
    chromium-chromedriver \
    sudo \
    && rm -rf /var/cache/apk/*

# Create directories and set permissions
RUN mkdir -p /app/static /app/staticfiles

# Copy entrypoint script and fix line endings
COPY entrypoint.sh /app/
RUN dos2unix /app/entrypoint.sh || true

# Create a non-root user and add to sudo group
RUN addgroup -S chrome && \
    adduser -S chrome -G chrome && \
    addgroup chrome wheel && \
    echo "chrome ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# Set Chrome binary path and flags for WeasyPrint (using new headless mode)
ENV CHROME_BIN=/usr/bin/chromium-browser
ENV CHROME_PATH=/usr/bin/chromium-browser
ENV CHROME_FLAGS="--headless=new --disable-gpu --no-sandbox --disable-dev-shm-usage"

# Give chrome user access to necessary directories
RUN chown -R chrome:chrome /app && \
    chmod -R 755 /app && \
    chmod 755 /app/entrypoint.sh && \
    # Add chrome user to necessary groups
    addgroup chrome audio && \
    addgroup chrome video

# Create media and temp directories with proper permissions
RUN mkdir -p /app/media /app/temp && \
    chown -R chrome:chrome /app/media /app/temp

# Switch to non-root user
USER chrome

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Create static directories
RUN mkdir -p /app/static /app/staticfiles


# Expose port
EXPOSE 8000

# Set entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]